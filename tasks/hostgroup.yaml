---
#
# We merge `foreman_hostgroups` and  `foreman_custom_hostgroups` based on name
# attribute so all names must be uniqe!
# You can either add more using `foreman_custom_hostgroups` or override the
# existing ones setting `foreman_hostgroups`
#
- name: "Debug hostgroup config"
  debug:
    var: item
  loop: "{{ [foreman_hostgroups, foreman_custom_hostgroups | default([{}])] |
            community.general.lists_mergeby('name',
                                            recursive=true,
                                            list_merge='prepend_rp') }}"
  loop_control:
    label: "{{ item.name }}"
  when: foreman_debug

- name: "Setup hostgroups (fail in check mode)"
  theforeman.foreman.hostgroup:
    name: "{{ item.name | mandatory }}"
    parent: "{{ item.parent | default(omit) }}"
    operatingsystem: "{{ item.operatingsystem | default(omit) }}"
    architecture: "{{ item.architecture | default(omit) }}"
    medium: "{{ item.medium | default(omit) }}"
    ptable: "{{ item.ptable | default(omit) }}"
    subnet: "{{ item.subnet | default(omit) }}"
    pxe_loader: "{{ item.pxe_loader | default(omit) }}"
    puppet_ca_proxy: "{{ item.puppet_ca_proxy | default(omit) }}"
    puppet_proxy: "{{ item.puppet_proxy | default(omit) }}"
    domain: "{{ item.domain | default(omit) }}"
    parameters: "{{ item.parameters | default(omit) }}"
    state: "{{ item.state | default('present') }}"
    username: "{{ foreman_username }}"
    password: "{{ foreman_password }}"
    server_url: "{{ foreman_server_url }}"
    validate_certs: "{{ foreman_validate_certs | default('true') }}"
  loop: "{{ [foreman_hostgroups, foreman_custom_hostgroups | default([{}])] |
            community.general.lists_mergeby('name',
                                            recursive=true,
                                            list_merge='prepend_rp') }}"
  loop_control:
    label: "{{ item.name }}"
  ignore_errors: "{{ ansible_check_mode }}"
